// Generated by view binder compiler. Do not edit!
package com.utotech.danzhehplus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.utotech.danzhehplus.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGamesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAsteroidAttack;

  @NonNull
  public final Button btnCatchingWaves;

  @NonNull
  public final Button btnSong;

  @NonNull
  public final Button btnStory;

  @NonNull
  public final Button btnVocab;

  private FragmentGamesBinding(@NonNull LinearLayout rootView, @NonNull Button btnAsteroidAttack,
      @NonNull Button btnCatchingWaves, @NonNull Button btnSong, @NonNull Button btnStory,
      @NonNull Button btnVocab) {
    this.rootView = rootView;
    this.btnAsteroidAttack = btnAsteroidAttack;
    this.btnCatchingWaves = btnCatchingWaves;
    this.btnSong = btnSong;
    this.btnStory = btnStory;
    this.btnVocab = btnVocab;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGamesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGamesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_games, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGamesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAsteroidAttack;
      Button btnAsteroidAttack = ViewBindings.findChildViewById(rootView, id);
      if (btnAsteroidAttack == null) {
        break missingId;
      }

      id = R.id.btnCatchingWaves;
      Button btnCatchingWaves = ViewBindings.findChildViewById(rootView, id);
      if (btnCatchingWaves == null) {
        break missingId;
      }

      id = R.id.btnSong;
      Button btnSong = ViewBindings.findChildViewById(rootView, id);
      if (btnSong == null) {
        break missingId;
      }

      id = R.id.btnStory;
      Button btnStory = ViewBindings.findChildViewById(rootView, id);
      if (btnStory == null) {
        break missingId;
      }

      id = R.id.btnVocab;
      Button btnVocab = ViewBindings.findChildViewById(rootView, id);
      if (btnVocab == null) {
        break missingId;
      }

      return new FragmentGamesBinding((LinearLayout) rootView, btnAsteroidAttack, btnCatchingWaves,
          btnSong, btnStory, btnVocab);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
