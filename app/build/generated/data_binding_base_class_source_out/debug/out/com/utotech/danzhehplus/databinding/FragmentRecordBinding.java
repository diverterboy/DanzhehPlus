// Generated by view binder compiler. Do not edit!
package com.utotech.danzhehplus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.utotech.danzhehplus.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRecordBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView btnPlay;

  @NonNull
  public final TextView btnRecord;

  @NonNull
  public final TextView btnStop;

  @NonNull
  public final TextView btnStopPlay;

  @NonNull
  public final TextView idTVstatus;

  @NonNull
  public final TextView txthead;

  private FragmentRecordBinding(@NonNull RelativeLayout rootView, @NonNull TextView btnPlay,
      @NonNull TextView btnRecord, @NonNull TextView btnStop, @NonNull TextView btnStopPlay,
      @NonNull TextView idTVstatus, @NonNull TextView txthead) {
    this.rootView = rootView;
    this.btnPlay = btnPlay;
    this.btnRecord = btnRecord;
    this.btnStop = btnStop;
    this.btnStopPlay = btnStopPlay;
    this.idTVstatus = idTVstatus;
    this.txthead = txthead;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRecordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRecordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_record, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRecordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPlay;
      TextView btnPlay = ViewBindings.findChildViewById(rootView, id);
      if (btnPlay == null) {
        break missingId;
      }

      id = R.id.btnRecord;
      TextView btnRecord = ViewBindings.findChildViewById(rootView, id);
      if (btnRecord == null) {
        break missingId;
      }

      id = R.id.btnStop;
      TextView btnStop = ViewBindings.findChildViewById(rootView, id);
      if (btnStop == null) {
        break missingId;
      }

      id = R.id.btnStopPlay;
      TextView btnStopPlay = ViewBindings.findChildViewById(rootView, id);
      if (btnStopPlay == null) {
        break missingId;
      }

      id = R.id.idTVstatus;
      TextView idTVstatus = ViewBindings.findChildViewById(rootView, id);
      if (idTVstatus == null) {
        break missingId;
      }

      id = R.id.txthead;
      TextView txthead = ViewBindings.findChildViewById(rootView, id);
      if (txthead == null) {
        break missingId;
      }

      return new FragmentRecordBinding((RelativeLayout) rootView, btnPlay, btnRecord, btnStop,
          btnStopPlay, idTVstatus, txthead);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
